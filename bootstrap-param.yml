#-----------------------------------------------------
# Puerto del MS
#-----------------------------------------------------
server:
  port: 8087
  
#-----------------------------------------------------
# Configuracion de datasource oracle - redis
#-----------------------------------------------------
spring:
  application:
    name: INTRAMX-APPEB-SSO_REPAL
  datasource:
    url: jdbc:oracle:thin:@107.119.164.113:1660:odmxrep1
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: deifrepa
    password: V4yBF#fSot
  redis:
    host: srrdcdlo21mxg01.ilm.dev.mx.corp
    username: redisoauthservermxisclidev
    password: R3d1s_c1B_D3V
    port: 6379
    timeout: 10000
    socket-timeout: 10000
    maxtotal: 25
    maxidle: 20
    minidle: 10
    maxwaitmillis: 1000
    client-name: redis-11999
    enterprise:
      enabled: true
      tls: TLSv1.2
    jks:
      route: /etc/gateway/keystore/keystoreredis.jks
      password: redisREPAL2021

#----------------------------------------------------      
# DETALLES DE LOGGING PARA ARCHIVOS Y NIVELES DE ERROR
#----------------------------------------------------
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: INFO
    mx.santander: DEBUG
    mx.santander.pid: DEBUG


#-----------------------------------------------------      
# Configuracion de Histryx
#-----------------------------------------------------
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000

#-----------------------------------------------------
# Configuraciones de PID - logadapter
#-----------------------------------------------------
logadapter:
    logconsole:
        level: INFO
    logsystem:
        level: INFO
    logservice:
        amq:
            url: tcp://mx-repal-local-amq-service-amq-tcp:61616
            queue: mx-repal-dev-queue
            security:
              authorization: dXNybHNtcTpCcjBrM3JMMGdTM3J2MWMzNG1R
        ws:
            url: https://mx-repal-logservice-mx-repal-dev.appls.mex01.mex.dev.mx1.paas.cloudcenter.corp/selectorLogService
        adapters:
            audit:
                canalprimario: AMQ
                canalcontingente: REST
            business:
                canalprimario: AMQ
                canalcontingente: REST
    worker-config:
        id-organizacion-estatica: 50011032_REPAL_REPOSITORY
        worker-class: mx.santander.repal.catalogos.parametria.util.LogAdapterExtractorAPI   
#-----------------------------------------------------
# Seguridad para MS 
#-----------------------------------------------------
app:
  security:
    #Habilita o deshabilita la seguridad del MS
    securityInterceptorEnable: true
    #Habilita o deshabilita el perfilamiento
    securityPerfilamientoEnable: false
    #Falta el appId de repal - en solicitud  
    excludePaths: /health
  appId: INTRAMX-APPEB-SSO_REPAL
  separadorCookie: "#"  
  versionCookie: 1.0
  emisorCookie: SANTEC_MX
  secure-random: SHA1PRNG   
tiempos:
  # Tiempo en segundos que dura la sesion
  sesion: 600 #180
  cookie:
    # Vigencia de la cookie en segundos
    validez: 600 #180
    # Tiempo en segundos en que se regenerara la cookie, se recomienda que sea inferior al periodo de validez
    regeneracion: 180 #300

#----------------------------------------------------- 
# CONFIGURACION PARA COMPONENTE CODES
#-----------------------------------------------------
codes:
  app: MXDD
  modulo: MXDDSEG
    
#-----------------------------------------------------
# SQL / QUERIES
#-----------------------------------------------------
query:
  clacon:
    listaClacones: SELECT ID_CLAVE_PK ID_CLACON,VAL_CLAVE CLACON, DSC_CLAVE DESCRIPCION, VAL_ESTATUS ESTATUS FROM RPL_MX_MAE_CLACONES ORDER BY DSC_CLAVE ASC
    registraClacon: INSERT INTO RPL_MX_MAE_CLACONES (ID_CLAVE_PK,VAL_CLAVE, DSC_CLAVE, FCH_CARGA, VAL_ESTATUS) VALUES ((SELECT NVL(MAX(TO_NUMBER(ID_CLAVE_PK)),0) + 1 from RPL_MX_MAE_CLACONES),?,?,SYSDATE,?)
    actualizaClacon: UPDATE RPL_MX_MAE_CLACONES SET VAL_CLAVE = ?, DSC_CLAVE = ?, VAL_ESTATUS = ? WHERE ID_CLAVE_PK =?
    eliminaClacon: UPDATE RPL_MX_MAE_CLACONES SET VAL_ESTATUS = 'I' WHERE ID_CLAVE_PK = ?
    getClacon: SELECT ID_CLAVE_PK ID_CLACON,VAL_CLAVE CLACON, DSC_CLAVE DESCRIPCION, VAL_ESTATUS ESTATUS FROM RPL_MX_MAE_CLACONES  WHERE ID_CLAVE_PK = ?
    validaClacon: SELECT COUNT(*) FROM RPL_MX_MAE_CLACONES WHERE VAL_CLAVE = ?
    duplicadoClacon: SELECT ID_CLAVE_PK from RPL_MX_MAE_CLACONES WHERE VAL_CLAVE= ?
  cliente:
    listaClientes: SELECT ID_CLIENTE_PK, VAL_CLIENTE_LOCAL CLIENTELOCAL,VAL_CLIENTE_GLOBAL CLIENTECORPORATIVO , VAL_NOMBRE_CTE NOMBRE,VAL_ESTATUS_CTE ESTATUS FROM RPL_MX_MAE_CLIENTE ORDER BY VAL_CLIENTE_LOCAL ASC
    registraCliente: INSERT INTO RPL_MX_MAE_CLIENTE (ID_CLIENTE_PK, VAL_CLIENTE_LOCAL, VAL_CLIENTE_GLOBAL, VAL_NOMBRE_CTE, VAL_ESTATUS_CTE) VALUES ((SELECT NVL(MAX(ID_CLIENTE_PK),0) + 1 from RPL_MX_MAE_CLIENTE),?,?,?,?)
    #registraCliente: INSERT INTO RPL_MX_MAE_CLIENTE (ID_CLIENTE_PK, VAL_CLIENTE_LOCAL, VAL_CLIENTE_GLOBAL, VAL_NOMBRE_CTE, VAL_ESTATUS_CTE) VALUES (SEQ_RPL_MX_MAE_CLIENTE.NextVal,?,?,?,?)
    actualizaCliente: UPDATE RPL_MX_MAE_CLIENTE SET VAL_CLIENTE_LOCAL=?, VAL_CLIENTE_GLOBAL=?, VAL_NOMBRE_CTE=?, VAL_ESTATUS_CTE=? WHERE ID_CLIENTE_PK = ?
    getCliente: SELECT ID_CLIENTE_PK, VAL_CLIENTE_LOCAL CLIENTELOCAL,VAL_CLIENTE_GLOBAL CLIENTECORPORATIVO , VAL_NOMBRE_CTE NOMBRE,VAL_ESTATUS_CTE ESTATUS FROM RPL_MX_MAE_CLIENTE WHERE ID_CLIENTE_PK =? OR ID_CLIENTE_PK =?
    eliminaCliente: UPDATE RPL_MX_MAE_CLIENTE SET VAL_ESTATUS_CTE ='I' WHERE ID_CLIENTE_PK = ?
    validaCliente: SELECT COUNT(*) FROM RPL_MX_MAE_CLIENTE WHERE  VAL_CLIENTE_LOCAL =?
    cuenta:
      validaComercioProducto: SELECT COUNT(*) FROM RPL_MX_REL_CUENTA_CLIENTE WHERE ID_CUENTA_CLIENTE_PK = ? AND (SELECT DSC_PRODUCTO FROM RPL_MX_MAE_PRODUCTO WHERE ID_PRODUCTO_PK=?) IN ('DOM','DOI') AND  NVL(VAL_COMERCIO, '0') = '0'
      validaCuentaProducto: SELECT COUNT(*) FROM RPL_MX_REL_CUENTA_PRODUCTO WHERE ID_CUENTA_CLIENTE_FK = ? AND ID_PRODUCTO_FK = ?
      listaCuentasCliente: SELECT  RCC.ID_CUENTA_CLIENTE_PK ID_CUENTA_CLIENTE, RCC.VAL_CUENTA CUENTA, RCC.VAL_COMERCIO COMERCIO, RCC.VAL_CUENTA_COBRO CUENTA_COBRO, RCC.VAL_DIVISA DIVISA  , (CASE WHEN ID_CUENTA_CLIENTE_PK IN (SELECT ID_CUENTA_CLIENTE_FK FROM RPL_MX_REL_CUENTA_PRODUCTO WHERE ID_PRODUCTO_FK   IN (SELECT ID_PRODUCTO_PK FROM  RPL_MX_MAE_PRODUCTO) AND ID_CUENTA_CLIENTE_FK IN (SELECT ID_CUENTA_CLIENTE_PK FROM RPL_MX_REL_CUENTA_CLIENTE WHERE ID_CLIENTE_FK = ?))  THEN 1 ELSE 0 END) ASIGNADO FROM RPL_MX_REL_CUENTA_CLIENTE RCC WHERE ID_CLIENTE_FK = ? ORDER BY VAL_CUENTA ASC
      registraCuenta: INSERT INTO RPL_MX_REL_CUENTA_CLIENTE (ID_CUENTA_CLIENTE_PK, ID_CLIENTE_FK, VAL_CUENTA,VAL_COMERCIO, VAL_CUENTA_COBRO, VAL_DIVISA) VALUES ((SELECT NVL(MAX(ID_CUENTA_CLIENTE_PK),0) + 1 from RPL_MX_REL_CUENTA_CLIENTE),?,?,?,?,?)
      #registraCuenta: INSERT INTO RPL_MX_REL_CUENTA_CLIENTE (ID_CUENTA_CLIENTE_PK, ID_CLIENTE_FK, VAL_CUENTA,VAL_COMERCIO, VAL_CUENTA_COBRO, VAL_DIVISA) VALUES (SEQ_RPL_MX_REL_CUENTA_CLIENTE.NextVal,?,?,?,?,?)
      eliminaCuenta: DELETE FROM RPL_MX_REL_CUENTA_CLIENTE WHERE ID_CUENTA_CLIENTE_PK = ?
      asignaProductoCuenta: INSERT INTO RPL_MX_REL_CUENTA_PRODUCTO (ID_CUENTA_PRODUCTO_PK, ID_PRODUCTO_FK,ID_CUENTA_CLIENTE_FK) VALUES ((SELECT NVL(MAX(ID_CUENTA_PRODUCTO_PK),0) + 1 from RPL_MX_REL_CUENTA_PRODUCTO),?,?)
      #asignaProductoCuenta: INSERT INTO RPL_MX_REL_CUENTA_PRODUCTO (ID_CUENTA_PRODUCTO_PK, ID_PRODUCTO_FK,ID_CUENTA_CLIENTE_FK) VALUES (SEQ_RPL_MX_REL_CUENTA_PRODUCTO.NextVal,?,?)
      countProductos: SELECT COUNT(*) FROM RPL_MX_REL_PRODUCTO_CLIENTE WHERE ID_PRODUCTO_FK = ? AND ID_CLIENTE_FK=?
      asignarProductoCliente: INSERT INTO RPL_MX_REL_PRODUCTO_CLIENTE (ID_PRODUCTO_CLIENTE_PK, ID_CLIENTE_FK, ID_PRODUCTO_FK) VALUES ((SELECT NVL(MAX(ID_PRODUCTO_CLIENTE_PK),0) + 1 from RPL_MX_REL_PRODUCTO_CLIENTE),?,?)
      #asignarProductoCliente: INSERT INTO RPL_MX_REL_PRODUCTO_CLIENTE (ID_PRODUCTO_CLIENTE_PK, ID_CLIENTE_FK, ID_PRODUCTO_FK) VALUES (SEQ_RPL_MX_REL_PROD_CLIENTE.NextVal,?,?)
      consultaCuentaProducto: SELECT CC.ID_CUENTA_CLIENTE_PK ID_CUENTA_CLIENTE,P.DSC_PRODUCTO DESCRIPCION_PRODUCTO, CC.VAL_CUENTA CUENTA, P.ID_PRODUCTO_PK ID_PRODUCTO, CP.ID_CUENTA_PRODUCTO_PK FROM RPL_MX_REL_CUENTA_CLIENTE CC, RPL_MX_MAE_PRODUCTO  P, RPL_MX_REL_CUENTA_PRODUCTO CP WHERE  CP.ID_PRODUCTO_FK  =P.ID_PRODUCTO_PK AND CP.ID_CUENTA_CLIENTE_FK  = CC.ID_CUENTA_CLIENTE_PK AND CP.ID_CUENTA_CLIENTE_FK=?
      eliminaAsignacionCuenta: DELETE FROM RPL_MX_REL_CUENTA_PRODUCTO WHERE ID_CUENTA_PRODUCTO_PK =?
      eliminarProductoCliente: delete from  rpl_mx_rel_producto_cliente where ID_PRODUCTO_FK=(select id_producto_fk from  RPL_MX_REL_CUENTA_PRODUCTO WHERE ID_CUENTA_PRODUCTO_PK =?)and ID_CLIENTE_FK=(select id_cliente_fk from rpl_mx_rel_cuenta_cliente where  id_cuenta_cliente_pk =(select id_cuenta_cliente_fk from  RPL_MX_REL_CUENTA_PRODUCTO WHERE ID_CUENTA_PRODUCTO_PK =?))
      validaCuenta: SELECT COUNT(*) FROM RPL_MX_REL_CUENTA_CLIENTE WHERE VAL_CUENTA = ?
      validaStatusCliente: SELECT COUNT(*) FROM RPL_MX_MAE_CLIENTE WHERE ID_CLIENTE_PK= ? AND VAL_ESTATUS_CTE='I'
  producto:
      listaProductos: SELECT ID_PRODUCTO_PK ,  UPPER(DSC_PRODUCTO) DESCRIPCION, UPPER(TXT_PREF_ARCH_ENVIO)  PREFIJO, UPPER(TXT_CLACON_COMISION) CLACONCOMISION,UPPER(IMP_COMISION) COMISION,IMP_IVA IVA,VAL_ESTATUS ESTATUS FROM RPL_MX_MAE_PRODUCTO ORDER BY DSC_PRODUCTO ASC
      registraProducto: INSERT INTO RPL_MX_MAE_PRODUCTO (ID_PRODUCTO_PK, DSC_PRODUCTO,TXT_PREF_ARCH_ENVIO, VAL_ESTATUS,IMP_IVA ,TXT_CLACON_COMISION, IMP_COMISION) VALUES ((SELECT NVL(MAX(ID_PRODUCTO_PK), 0) + 1 from RPL_MX_MAE_PRODUCTO),UPPER(?),UPPER(?),UPPER(?),UPPER(?),UPPER(?),UPPER(?))
      #registraProducto: INSERT INTO RPL_MX_MAE_PRODUCTO (ID_PRODUCTO_PK, DSC_PRODUCTO,TXT_PREF_ARCH_ENVIO, VAL_ESTATUS,IMP_IVA ,TXT_CLACON_COMISION, IMP_COMISION) VALUES (SEQ_RPL_MX_MAE_PRODUCTO.NextVal,?,?,?,?,?,?)
      actualizaProducto: UPDATE RPL_MX_MAE_PRODUCTO SET DSC_PRODUCTO = UPPER(?), TXT_PREF_ARCH_ENVIO = UPPER(?), IMP_IVA = ?, TXT_CLACON_COMISION = ?, IMP_COMISION = ?, VAL_ESTATUS = ? WHERE ID_PRODUCTO_PK = ?
      eliminaProducto: DELETE FROM RPL_MX_MAE_PRODUCTO WHERE ID_PRODUCTO_PK = ?
      getProducto: SELECT ID_PRODUCTO_PK ,  DSC_PRODUCTO DESCRIPCION, TXT_PREF_ARCH_ENVIO  PREFIJO, TXT_CLACON_COMISION CLACONCOMISION,IMP_COMISION COMISION,IMP_IVA IVA,VAL_ESTATUS ESTATUS FROM RPL_MX_MAE_PRODUCTO WHERE ID_PRODUCTO_PK = ?
      validaProducto: SELECT COUNT(*) FROM RPL_MX_MAE_PRODUCTO  WHERE DSC_PRODUCTO = UPPER(?)
  reporte:
      comisiones: SELECT REC.ID_COMISION_PK ID_COMISION, REC.TXT_NOM_CLIENTE NOM_CLIENTE, REC.VAL_ID_CLIENTE,REC.TXT_MES_COBRO, REC.IMP_TOTAL_COM CCOMISION,REC.IMP_TOTAL_IVA  CIVA, REC.IMP_TOTAL CTOTAL, RDC.TXT_CONCEPTO, RDC.VAL_NO_CLACON,RDC.VAL_CTA_REP, RDC.VAL_CTA_COBRO,RDC.VAL_DIVISA, RDC.IMP_COMISION DCOMISION, RDC.IMP_IVA DIVA, RDC.IMP_TOTAL AS TOTAL_DET FROM RPL_MX_AUX_ENCAB_COM REC, RPL_MX_AUX_DET_COM RDC WHERE REC.ID_COMISION_PK = RDC.ID_COMISION_FK AND REC.TXT_MES_COBRO = TO_CHAR(TO_DATE(?,'MM/YY'), 'MONYY') ORDER BY REC.ID_COMISION_PK
