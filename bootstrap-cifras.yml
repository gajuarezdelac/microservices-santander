#-----------------------------------------------------
# Puerto del aplicativo
#-----------------------------------------------------
server:
  port: 8081

#-----------------------------------------------------
# Configuracion de datasource oracle - redis
#-----------------------------------------------------
spring:
  application:
    name: INTRAMX-APPEB-SSO_REPAL
  datasource:
    url: jdbc:oracle:thin:@107.119.164.113:1660:odmxrep1
    driver-class-name: oracle.jdbc.driver.OracleDriver
    username: deifrepa
    password: V4yBF#fSot
  redis:
    host: srrdcdlo21mxg01.ilm.dev.mx.corp
    username: redisoauthservermxisclidev
    password: R3d1s_c1B_D3V
    port: 6379
    timeout: 10000
    socket-timeout: 10000
    maxtotal: 25
    maxidle: 20
    minidle: 10
    maxwaitmillis: 1000
    client-name: redis-11999
    enterprise:
      enabled: true 
      tls: TLSv1.2
    jks:
      route: /etc/gateway/keystore/keystoreredis.jks
      password: redisREPAL2021


#-----------------------------------------------------      
# DETALLES DE LOGGING PARA ARCHIVOS Y NIVELES DE ERROR
#-----------------------------------------------------
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: INFO
    mx.santander: DEBUG
    
#-----------------------------------------------------      
# Configuracion de Histryx
#-----------------------------------------------------
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000
            
#-----------------------------------------------------
# URL de carga masiva
#-----------------------------------------------------        
url:
  fileUploadDir: /planREPAL/procesos/REPAL/interfaces
            
#-----------------------------------------------------
#Configuraciones de PID - logadapter - LogService
#-----------------------------------------------------
logadapter:
    logconsole:
        level: INFO
    logsystem:
        level: INFO
    logservice:
        amq:
            url: tcp://mx-repal-local-amq-service-amq-tcp:61616?jms.prefetchPolicy.queuePrefetch=1&jms.redeliveryPolicy.maximumRedeliveries=2
            queue: mx-repal-dev-queue
            security:
              authorization: dXNybHNtcTpCcjBrM3JMMGdTM3J2MWMzNG1R                
        ws:
            url: https://mx-repal-logservice-mx-repal-dev.appls.mex01.mex.dev.mx1.paas.cloudcenter.corp/selectorLogService
        adapters:
            audit:
                canalprimario: AMQ
                canalcontingente: REST
            business:
                canalprimario: AMQ
                canalcontingente: REST
    worker-config:
        id-organizacion-estatica: 50011032_REPAL_REPOSITORY
        worker-class: mx.santander.repal.cifras.control.util.LogAdapterApiExtractor

#-----------------------------------------------------
# Seguridad para MS 
#-----------------------------------------------------
app:
  security:
    #Habilita o deshabilita la seguridad del MS
    securityInterceptorEnable: true
    #Habilita o deshabilita el perfilamiento
    securityPerfilamientoEnable: false
    #Falta el appId de repal - en solicitud  
    excludePaths: /health
  appId: INTRAMX-APPEB-SSO_REPAL
  separadorCookie: "#"  
  versionCookie: 1.0
  emisorCookie: SANTEC_MX
  secure-random: SHA1PRNG   
tiempos:
  # Tiempo en segundos que dura la sesion
  sesion: 600 #180
  cookie:
    # Vigencia de la cookie en segundos
    validez: 600 #180
    # Tiempo en segundos en que se regenerara la cookie, se recomienda que sea inferior al periodo de validez
    regeneracion: 180 #300

#----------------------------------------------------- 
# CONFIGURACION PARA COMPONENTE CODES
#-----------------------------------------------------
codes:
  app: MXDD
  modulo: MXDDSEG

#-----------------------------------------------------
# SQL / QUERIES
#-----------------------------------------------------
#CAMBIAR RPL_MX_MAE_RECEP_INTERFACES por RPL_MX_MAE_RECEPCION_INTERFACES
params:
  query:
    monitoresRecepcion: 
      -   SELECT RRI.ID_RECEP_INTERFACES_PK IDENTIFICADOR, TO_CHAR(RRI.FCH_RECEPCION, 'DD/MM/YYYY') FECHACARGA, RRI.TXT_NOMBRE_INTERFAZ ARCHIVO, UPPER(RRI.VAL_ESTATUS) ESTATUS, (CASE WHEN RRI.HOR_RECEP_ESPERADA IS NULL THEN ' ' ELSE TO_CHAR(RRI.HOR_RECEP_ESPERADA, 'HH24:MI:SS') END) HORARECEPCIONESPERADA, (CASE WHEN RRI.HOR_RECEP_ESPERADA IS NULL THEN 0 WHEN TRUNC(RRI.FCH_RECEPCION) < TRUNC(SYSDATE) THEN 100 ELSE TRUNC(((SYSDATE-TRUNC(SYSDATE)) - (RRI.HOR_RECEP_ESPERADA - TRUNC(RRI.HOR_RECEP_ESPERADA)))*24*60) END) DIFERENCIA_HORAS, RP.DSC_PRODUCTO PRODUCTO FROM RPL_MX_MAE_RECEP_INTERFACES RRI LEFT JOIN RPL_MX_MAE_PRODUCTO RP ON RP.ID_PRODUCTO_PK = RRI.ID_PRODUCTO_FK WHERE TO_CHAR(RRI.FCH_RECEPCION, 'DD/MM/YYYY') = ? AND ((RRI.ID_PRODUCTO_FK = ? ) OR (? = 0)) ORDER BY RRI.HOR_RECEP_ESPERADA ASC
    monitoresEnvio:
      -   SELECT EI.ID_ENTREGA_INTERFACES_PK IDENTIFICADOR, TO_CHAR(EI.FCH_CARGA, 'DD/MM/YYYY') FECHAARCHIVO, EI.TXT_NOMBRE_INTERFAZ ARCHIVO, UPPER(EI.VAL_ESTATUS) ESTATUS, EI.CAN_REGISTROS CANTIDADREGISTROS, TO_CHAR(EI.FCH_ENVIO, 'DD/MM/YYYY') FECHAENVIO, TO_CHAR(EI.FCH_ENVIO, 'HH24:MI:SS') HORAENVIO, EI.VAL_COD_ERROR CODIGOERROR, EI.VAL_REPROCESO REPROCESO, C.VAL_NOMBRE_CTE CLIENTE, P.DSC_PRODUCTO PRODUCTO FROM RPL_MX_MAE_ENTREGA_INTERFACES EI LEFT JOIN RPL_MX_MAE_CLIENTE C ON EI.ID_CLIENTE_FK = C.ID_CLIENTE_PK LEFT JOIN RPL_MX_MAE_PRODUCTO P ON EI.ID_PRODUCTO_FK = P.ID_PRODUCTO_PK WHERE EI.ID_CLIENTE_FK = C.ID_CLIENTE_PK AND P.ID_PRODUCTO_PK = EI.ID_PRODUCTO_FK AND TO_CHAR(EI.FCH_CARGA, 'DD/MM/YYYY') = ? AND ((EI.ID_PRODUCTO_FK = ?) OR (? = 0)) ORDER BY EI.FCH_CARGA ASC
      -   UPDATE RPL_MX_MAE_ENTREGA_INTERFACES SET VAL_REPROCESO = ? WHERE ID_ENTREGA_INTERFACES_PK = ?
    clacon:
       registraClacon: INSERT INTO RPL_MX_MAE_CLACONES (ID_CLAVE_PK,VAL_CLAVE, DSC_CLAVE, FCH_CARGA, VAL_ESTATUS) VALUES ((SELECT NVL(MAX(TO_NUMBER(ID_CLAVE_PK)),0) + 1 from RPL_MX_MAE_CLACONES),?,?,SYSDATE,?)
       validaClacon: SELECT COUNT(*) FROM RPL_MX_MAE_CLACONES WHERE VAL_CLAVE = ?
       listaClacones: SELECT ID_CLAVE_PK ID_CLACON,VAL_CLAVE CLACON, DSC_CLAVE DESCRIPCION, VAL_ESTATUS ESTATUS FROM RPL_MX_MAE_CLACONES ORDER BY DSC_CLAVE ASC
    cliente:
       registraCliente: INSERT INTO RPL_MX_MAE_CLIENTE (ID_CLIENTE_PK, VAL_CLIENTE_LOCAL, VAL_CLIENTE_GLOBAL, VAL_NOMBRE_CTE, VAL_ESTATUS_CTE) VALUES ((SELECT NVL(MAX(ID_CLIENTE_PK),0) + 1 from RPL_MX_MAE_CLIENTE),?,?,?,?)
       validaCliente: SELECT COUNT(*) FROM RPL_MX_MAE_CLIENTE WHERE  VAL_CLIENTE_LOCAL =?
       listaClientes: SELECT ID_CLIENTE_PK, VAL_CLIENTE_LOCAL CLIENTELOCAL,VAL_CLIENTE_GLOBAL CLIENTECORPORATIVO , VAL_NOMBRE_CTE NOMBRE,VAL_ESTATUS_CTE ESTATUS FROM RPL_MX_MAE_CLIENTE ORDER BY VAL_CLIENTE_LOCAL ASC
    cuenta:
       verificaCliente: select 1 from RPL_MX_MAE_PRODUCTO where DSC_PRODUCTO =? and (select ID_CLIENTE_FK from RPL_MX_REL_CUENTA_CLIENTE where VAL_CUENTA=?)=(select ID_CLIENTE_PK from RPL_MX_MAE_CLIENTE where VAL_CLIENTE_LOCAL=?) 
       veriricaPCliente: select 1 from RPL_MX_MAE_PRODUCTO A, RPL_MX_REL_CUENTA_CLIENTE B,RPL_MX_MAE_CLIENTE C where A.DSC_PRODUCTO=? and B.VAL_CUENTA=? and C.VAL_CLIENTE_LOCAL = ? 
       registraCuenta: INSERT INTO RPL_MX_REL_CUENTA_CLIENTE (ID_CUENTA_CLIENTE_PK, ID_CLIENTE_FK, VAL_CUENTA,VAL_COMERCIO, VAL_CUENTA_COBRO, VAL_DIVISA) VALUES ((SELECT NVL(MAX(ID_CUENTA_CLIENTE_PK),0) + 1 FROM RPL_MX_REL_CUENTA_CLIENTE), (SELECT ID_CLIENTE_PK FROM RPL_MX_MAE_CLIENTE WHERE VAL_CLIENTE_LOCAL = ?),?,?,?,?)
       validaCuenta: SELECT COUNT(*) FROM RPL_MX_REL_CUENTA_CLIENTE WHERE VAL_CUENTA = ? OR VAL_COMERCIO=?
       validaCuentaProducto: SELECT COUNT(*) FROM RPL_MX_REL_CUENTA_PRODUCTO WHERE ID_CUENTA_CLIENTE_FK = (SELECT ID_CUENTA_CLIENTE_PK FROM RPL_MX_REL_CUENTA_CLIENTE WHERE VAL_CUENTA = ?) AND ID_PRODUCTO_FK = (SELECT ID_PRODUCTO_PK FROM RPL_MX_MAE_PRODUCTO WHERE DSC_PRODUCTO = ?)
       asignaProductoCuenta: INSERT INTO RPL_MX_REL_CUENTA_PRODUCTO (ID_CUENTA_PRODUCTO_PK, ID_CUENTA_CLIENTE_FK, ID_PRODUCTO_FK) VALUES ((SELECT NVL(MAX(ID_CUENTA_PRODUCTO_PK),0) + 1 from RPL_MX_REL_CUENTA_PRODUCTO), (SELECT ID_CUENTA_CLIENTE_PK FROM RPL_MX_REL_CUENTA_CLIENTE WHERE ID_CLIENTE_FK=(SELECT ID_CLIENTE_PK FROM RPL_MX_MAE_CLIENTE WHERE VAL_CLIENTE_LOCAL= ? )AND  VAL_CUENTA = ?),(SELECT ID_PRODUCTO_PK FROM RPL_MX_MAE_PRODUCTO WHERE DSC_PRODUCTO = ?))
       asignarProductoCliente: INSERT INTO RPL_MX_REL_PRODUCTO_CLIENTE (ID_PRODUCTO_CLIENTE_PK, ID_CLIENTE_FK, ID_PRODUCTO_FK) VALUES ((SELECT NVL(MAX(ID_PRODUCTO_CLIENTE_PK),0) + 1 from RPL_MX_REL_PRODUCTO_CLIENTE),(SELECT ID_CLIENTE_PK FROM RPL_MX_MAE_CLIENTE WHERE VAL_CLIENTE_LOCAL = ?),(SELECT ID_PRODUCTO_PK FROM RPL_MX_MAE_PRODUCTO WHERE DSC_PRODUCTO = ?))
       validaComercioProducto: SELECT COUNT(*) FROM RPL_MX_REL_CUENTA_CLIENTE WHERE ID_CUENTA_CLIENTE_PK =? AND (SELECT DSC_PRODUCTO FROM RPL_MX_MAE_PRODUCTO WHERE ID_PRODUCTO_PK=?) IN ('DOM','DOI') AND  NVL(VAL_COMERCIO, '0') = '0'
       obtieneCuenta: SELECT ID_CUENTA_CLIENTE_PK FROM RPL_MX_REL_CUENTA_CLIENTE WHERE VAL_CUENTA = ?
    producto:
       listaProductos: SELECT ID_PRODUCTO_PK ,  DSC_PRODUCTO DESCRIPCION, TXT_PREF_ARCH_ENVIO  PREFIJO, TXT_CLACON_COMISION CLACONCOMISION,IMP_COMISION COMISION,IMP_IVA IVA,VAL_ESTATUS ESTATUS FROM RPL_MX_MAE_PRODUCTO ORDER BY DSC_PRODUCTO ASC
       obtieneProducto: SELECT ID_PRODUCTO_PK FROM RPL_MX_MAE_PRODUCTO WHERE DSC_PRODUCTO =?
    reporte:
       comisiones: SELECT REC.ID_COMISION_PK ID_COMISION, REC.TXT_NOM_CLIENTE NOM_CLIENTE, REC.VAL_ID_CLIENTE,REC.TXT_MES_COBRO, REC.IMP_TOTAL_COM CCOMISION,REC.IMP_TOTAL_IVA  CIVA, REC.IMP_TOTAL CTOTAL, RDC.TXT_CONCEPTO, RDC.VAL_NO_CLACON,RDC.VAL_CTA_REP, RDC.VAL_CTA_COBRO,RDC.VAL_DIVISA, RDC.IMP_COMISION DCOMISION, RDC.IMP_IVA DIVA, RDC.IMP_TOTAL AS TOTAL_DET FROM RPL_MX_AUX_ENCAB_COM REC, RPL_MX_AUX_DET_COM RDC WHERE REC.ID_COMISION_PK = RDC.ID_COMISION_FK AND REC.TXT_MES_COBRO = TO_CHAR(TO_DATE(?,'MM/YY'), 'MONYY') ORDER BY REC.ID_COMISION_PK
